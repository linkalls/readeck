---
# SPDX-FileCopyrightText: Â© 2023 Olivier Meunier <olivier@neokraft.net>
#
# SPDX-License-Identifier: AGPL-3.0-only

openapi: 3.0.0
info:
  version: 1.0.0
  title: Readeck API
  description: |
    # Introduction

    The Readeck API provides REST endpoints that can be used for any purpose, should it be a
    mobile application, a script, you name it.

    ## API Endpoint

    You can access this API on `__BASE_URI__`.

    Most of your requests and responses are using JSON as the exchange format.

    ## Authentication

    To use the API, you first need to [create an authentication token](../profile/tokens). You can
    then use your new token using the `Bearer` HTTP authorization scheme.

    For example, you first request will look like:

    ```sh
    curl -H "Authorization: Bearer <TOKEN>" __BASE_URI__/bookmarks
    ```

    Or, in NodeJS:

    ```js
    fetch("__BASE_URI__/bookmarks", {
      headers: {
        "Authorization": "Bearer <TOKEN>",
      },
    })
    ```

    ## Test the API

    On this documentation, you can test every route.

    If you don't provide an API token in [Authentication](#auth), you can still test all the routes
    but note that the given curl example only work with an API token.


servers:
  - url: __BASE_URI__

components:
  securitySchemes:
    bearer:
      type: http
      scheme: Bearer

  schemas:
    $merge:
      - "types.yaml#.schemas"
      - "bookmarks/types.yaml#.schemas"

security:
  - bearer: []

tags:
  - name: bookmarks
    description: Bookmarks

  - name: bookmarks-export
    description: Bookmark Export

paths:
  /bookmarks:
    get:
      tags: [bookmarks]
      $merge:
        - "traits.yaml#.authenticated"
        - "traits.yaml#.paginated"
        - "bookmarks/routes.yaml#.list"

    post:
      tags: [bookmarks]
      $merge:
        - "traits.yaml#.authenticated"
        - "traits.yaml#.validator"
        - "traits.yaml#.deferred"
        - "bookmarks/routes.yaml#.create"

  /bookmarks/{id}:
    $merge:
      - "bookmarks/routes.yaml#.withBookmark"

    get:
      tags: [bookmarks]
      $merge:
        - "traits.yaml#.authenticated"
        - "bookmarks/routes.yaml#.retrieve"

    delete:
      tags: [bookmarks]
      $merge:
        - "traits.yaml#.authenticated"
        - "bookmarks/routes.yaml#.delete"

  /bookmarks/{id}/article:
    $merge:
      - "bookmarks/routes.yaml#.withBookmark"

    get:
      tags: [bookmarks-export]
      $merge:
        - "traits.yaml#.authenticated"
        - "bookmarks/routes.yaml#.article"

  /bookmarks/{id}/article.{format}:
    $merge:
      - "bookmarks/routes.yaml#.withBookmark"

    get:
      tags: [bookmarks-export]
      $merge:
        - "traits.yaml#.authenticated"
        - "bookmarks/routes.yaml#.export"
